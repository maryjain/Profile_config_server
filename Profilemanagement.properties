spring.datasource.url={cipher}44c4a52b7b0f33b0fa19ec6f1463ba2e5c1c82b91799c4e32a6f72ea16a9f9629eb3e71c6363bb13148c3c9f39e3a06b503e19881f93ab82273d03fca207198fdebd5a4660e7ad965b0b0fc2124a9a87
spring.datasource.username={cipher}42cf99e33b72afc8435ab48bb532a9cd364e14e242298a4b58d7b5f8c8c2b73a
spring.datasource.password={cipher}42cf99e33b72afc8435ab48bb532a9cd364e14e242298a4b58d7b5f8c8c2b73a

#spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/generalprofiledb
#spring.datasource.username=postgres
#spring.datasource.password=postgres

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri= http://host.docker.internal:8180/auth/realms/Profile/protocol/openid-connect/certs

#host.environment.port=8030
#env.port=${host.environment.port}
#server.port=${env.port:8030}


