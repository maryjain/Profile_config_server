#spring.datasource.url={cipher}d94cf71a94d5231e878b6d8cd3a2594706cef1a04d1e7bd953627999656e296033de373af857574233aca6615ab66bbcaa7995d519474e4a5c1195beb097c37b0ad04f38bf43935cec0e4fb1d700d544
#spring.datasource.username={cipher}2d9332dfbe51af06bc0d812868ac354fcf8f491bf38b609f0be24bcea3200a1f
#spring.datasource.password={cipher}2d9332dfbe51af06bc0d812868ac354fcf8f491bf38b609f0be24bcea3200a1f

#spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/generalprofiledb
spring.datasource.username=postgres
spring.datasource.password=postgres


host.environment.port=0
env.port=${host.environment.port}
server.port=${env.port:0}

spring.security.oauth2.resourceserver.jwt.jwk-set-uri= http://host.docker.internal:8180/auth/realms/Profile/protocol/openid-connect/certs
